#! /bin/bash

cordex()
{
   if [ -d IS-ENES-Data.github.io ] ; then
     cd IS-ENES-Data.github.io

     if [ "$(getGitBranch)" != master ] ; then
       git checkout master &> /dev/null
     fi

     git fetch && git reset --hard origin/master &> /dev/null
   else
     git clone https://github.com/IS-ENES-Data/IS-ENES-Data.github.io
     ln -sf IS-ENES-Data.github.io/CORDEX_RCMs_ToU.txt CORDEX_RCMs_ToU.txt
   fi

   return
}

getGitBranch()
{
   git branch | grep '*' | awk '{print $2}'
   return
}

# main
while getopts hP:-: option ${sArgs[*]}
do
  case $option in
    h)  ;;
    P)  prj=${OPTARG} ;;
    -) if [ ${OPTARG%=*} = "config_file" ] ; then
         CONFIG_FILE=${OPTARG##*=}
       elif [ ${OPTARG} == 'debug' ] ; then
         set -x
       elif [ ${OPTARG} == 'force-update' ] ; then
         isForceUp=t
       elif [ ${OPTARG%=*} = "qa_path" ] ; then
         QA_SRC=${OPTARG##*=}
       fi
       ;;
   \?) exit 1 ;;
  esac
done

shift $(( $OPTIND - 1 ))

test $# -eq 1  && cd $1 &> /dev/null

test ! "$prj" && prj=${1##*/}

# search for updates only once a day
today=$( date '+%Y%m%d' )

if [ ${isForceUp:-f} = f ] ; then
  if ! . $QA_SRC/scripts/updateConfigFile.txt ${prj}_LAST_TABLE_UPDATE=$today  ; then
    exit
  fi
fi

if [ "$prj" = CORDEX ] ; then
  cordex
fi


