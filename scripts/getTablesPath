getTablesPath()
{
  retVal=0

  export CONFIG_FILE

  if [ ! ${CONFIG_FILE} ] ; then
     if [ -w ~/.qa-dkrz/config.txt ] ; then
        CONFIG_FILE=~/.qa-dkrz/config.txt
     elif [ -w ${QA_TABLES}/.qa-dkrz/config.txt ] ; then
        CONFIG_FILE=QA_TABLES/.qa-dkrz/config.txt
     else
        CONFIG_FILE=~/.qa-dkrz/config.txt
     fi
  fi

  # path to the current user's home
  export QA_TABLES

  if [ ${QA_TABLES} ] ; then
    # if it is a new path, then adjust the config file
    . $QA_SRC/scripts/parseConfigFile QA_TABLES=${QA_TABLES}
  else
    # take QA_TABLES from the config file, if it exists.
    if ! . $QA_SRC/scripts/parseConfigFile QA_TABLES ; then
      retVal=41

      local dpath
      if [ ${CONDA_QA_PATH} ] ; then
         dpath="~/.qa_home/QA_TABLES"
      else
         dpath=${QA_SRC}/QA_Tables
      fi

      echo -e "\nPlease, specify variable QA_TABLES [default: ${dpath}], " > ${TTY}
      read -p "the spot for external tables and programs: " QA_TABLES 2> ${TTY}

      test ! ${QA_TABLES} && QA_TABLES=${dpath}

      local i j
      for i in 1 2 3 ; do
        if [ ${i} -eq 3 ] ; then
          echo "Could not mkdir QA_TABLES=${QA_TABLES}."
          exit 41
        fi

        if mkdir -p ${QA_TABLES} &> /dev/null ; then
          . $QA_SRC/scripts/parseConfigFile QA_TABLES=${QA_TABLES}
          break
        fi

        echo "Could not mkdir QA_TABLES=${QA_TABLES}."
        QA_TABLES=${HOME}/.qa-dkrz
        read -p "Do you want to try: ${QA_TABLES} " QA_TABLES 2> ${TTY}
      done
    fi

    if [ -d $QA_TABLES ] ; then
      if [ ! -w $QA_TABLES ] ; then
        echo "directory $QA_TABLES without write permissions,"
        echo "please, restart with added option --qa-tables=path"
        exit 41
      fi
    fi
  fi

  return $retVal
}

# main

getTablesPath
return $retVal
